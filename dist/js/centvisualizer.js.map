{"version":3,"sources":["centvisualizer/src/js/centvisualizer.js"],"names":["dashboardAdd","document","querySelector","dashboardEntries","dashboardTotal","form","dashboardAddForm","storageKey","window","localStorage","JSON","parse","getItem","readEntries","error","deleteEntry","console","expense","e","currentTarget","dataset","newEntries","filter","entry","button","stringify","renderEntries","renderTotal","createEntry","preventDefault","stopPropagation","FormData","euroPerMonth","parseInt","formData","get","calcAnimationDuration","calcEuroPerSecond","save","amountPerMonth","toFixed","animationDuration","entries","centsPerSecond","setItem","concat","Math","round","centPerSecond","calcTotalItem","item","reduce","acc","items","parseFloat","renderItem","suppressDelete","createElement","chartAmount","chartDelete","chartText","chart","chartInner","style","classList","add","innerHTML","addEventListener","appendChild","totalItem","forEach","remove","init"],"mappings":"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","file":"centvisualizer.js","sourcesContent":["const dashboardAdd = document.querySelector(\".dashboard__add\");\r\nconst dashboardEntries = document.querySelector(\".dashboard__entries\");\r\nconst dashboardTotal = document.querySelector(\".dashboard__total\");\r\nconst form = document.querySelector(\".form\");\r\nconst dashboardAddForm = document.querySelector(\".dashboard__add-entry\");\r\nconst dashboardAddClose = document.querySelector(\".dashboard__add-entry-close\");\r\nconst storageKey = \"chr1s.d3v:centVisualizer\";\r\n\r\nconst readEntries = () => {\r\n    if (!window.localStorage) {\r\n        console.error(\"localStorage not found.\");\r\n        return [];\r\n    }\r\n    return JSON.parse(window.localStorage.getItem(storageKey) || \"[]\");\r\n};\r\n\r\nconst deleteEntry = (e) => {\r\n    if (!window.localStorage) {\r\n        console.error(\"localStorage not found.\");\r\n        return;\r\n    }\r\n    const button = e.currentTarget;\r\n    const expense = button.dataset.expense;\r\n    const entries = readEntries();\r\n    const newEntries = entries.filter(entry => entry.expense !== expense);\r\n    window.localStorage.setItem(storageKey, JSON.stringify(newEntries));\r\n    renderEntries();\r\n    renderTotal();\r\n};\r\n\r\nconst createEntry = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!window.localStorage) {\r\n        console.error(\"localStorage not found.\");\r\n        return;\r\n    }\r\n    const form = e.currentTarget;\r\n    const formData = new FormData(form);\r\n    const euroPerMonth = parseInt(formData.get(\"amountPerMonth\"), 10);\r\n    const animationDuration = calcAnimationDuration(euroPerMonth);\r\n    const centsPerSecond = calcEuroPerSecond(euroPerMonth) * 100;\r\n    const save = {\r\n        expense: formData.get(\"expense\"),\r\n        amountPerMonth: euroPerMonth,\r\n        centsPerSecond: centsPerSecond.toFixed(4),\r\n        animationDuration\r\n    };\r\n    const entries = readEntries();\r\n    entries.push(save);\r\n    window.localStorage.setItem(storageKey, JSON.stringify(entries));\r\n    renderEntries();\r\n    renderTotal();\r\n};\r\n\r\nconst calcEuroPerSecond = (euroPerMonth) => {\r\n    return euroPerMonth / 30 / 24 / 60 / 60;\r\n};\r\n\r\nconst calcAnimationDuration = (amountPerMonth) => {\r\n    const centPerSecond = calcEuroPerSecond(amountPerMonth) * 100;\r\n    return `${Math.round((1 / centPerSecond) * 1000) }ms`;\r\n};\r\n\r\nconst calcTotalItem = () => {\r\n    const items = readEntries();\r\n    let item = items.reduce((acc, item) => {\r\n        acc.amountPerMonth += parseInt(item.amountPerMonth, 10);\r\n        acc.centsPerSecond += parseFloat(item.centsPerSecond);\r\n        return acc;\r\n    }, {\r\n        amountPerMonth: 0,\r\n        centsPerSecond: 0,\r\n        expense: \"Total\"\r\n    });\r\n\r\n    item.centsPerSecond = item.centsPerSecond.toFixed(4);\r\n    item.animationDuration = calcAnimationDuration(item.amountPerMonth);\r\n\r\n    return item;\r\n};\r\n\r\nconst renderItem = (item, suppressDelete) => {\r\n    const chart = document.createElement(\"div\");\r\n    const chartInner = document.createElement(\"div\");\r\n    const chartText = document.createElement(\"div\");\r\n    const chartAmount = document.createElement(\"div\");\r\n    const chartDelete = document.createElement(\"button\");\r\n\r\n    chart.classList.add(\"dashboard__entry\");\r\n    chartInner.classList.add(\"dashboard__entry-inner\");\r\n    chartInner.style.animationDuration = item.animationDuration;\r\n    chartAmount.classList.add(\"dashboard__entry-amount\");\r\n    chartAmount.innerHTML = `${item.amountPerMonth}€ / mo. = ${item.centsPerSecond}¢ / s`;\r\n    chartText.classList.add(\"dashboard__entry-text\");\r\n    chartText.innerHTML = item.expense;\r\n    chart.appendChild(chartInner);\r\n    chart.appendChild(chartText);\r\n    chart.appendChild(chartAmount);\r\n\r\n    if (suppressDelete) {\r\n        return chart;\r\n    }\r\n\r\n    chartDelete.classList.add(\"dashboard__entry-del\");\r\n    chartDelete.dataset.expense = item.expense;\r\n    chartDelete.classList.add(\"material-icons\");\r\n    chartDelete.innerHTML = \"close\";\r\n    chartDelete.addEventListener(\"click\", deleteEntry);\r\n    chart.appendChild(chartDelete);\r\n    return chart;\r\n};\r\n\r\nconst renderTotal = () => {\r\n    dashboardTotal.innerHTML = \"\";\r\n    const totalItem = calcTotalItem();\r\n\r\n    if (totalItem.amountPerMonth !== 0) {\r\n        const chart = renderItem(totalItem, true)\r\n        dashboardTotal.appendChild(chart);\r\n    }\r\n}\r\n\r\nconst renderEntries = () => {\r\n    const items = readEntries();\r\n    let chart;\r\n    dashboardEntries.innerHTML = \"\";\r\n    items.forEach((item) => {\r\n        chart = renderItem(item)\r\n        dashboardEntries.appendChild(chart);\r\n    });\r\n};\r\n\r\nconst init = function () {\r\n    if (readEntries().length > 0) {\r\n        renderEntries();\r\n        renderTotal();\r\n    }\r\n}\r\n\r\nform.addEventListener(\"submit\", createEntry)\r\ndashboardAdd.addEventListener(\"click\", () => {\r\n    dashboardAddForm.classList.remove(\"dashboard__add-entry--hidden\");\r\n    dashboardAdd.classList.add(\"dashboard__add--hidden\");\r\n});\r\ndashboardAddClose.addEventListener(\"click\", () => {\r\n    dashboardAddForm.classList.add(\"dashboard__add-entry--hidden\");\r\n    dashboardAdd.classList.remove(\"dashboard__add--hidden\");\r\n})\r\ninit();\r\n"]}