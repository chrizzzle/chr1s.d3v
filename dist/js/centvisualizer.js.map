{"version":3,"sources":["centvisualizer/src/js/centvisualizer.js"],"names":["dashboardAdd","document","querySelector","dashboardEntries","dashboardTotal","form","dashboardAddForm","storageKey","readEntries","localStorage","JSON","parse","window","getItem","error","deleteEntry","e","expense","currentTarget","dataset","newEntries","filter","entry","setItem","stringify","renderEntries","console","createEntry","stopPropagation","euroPerMonth","entries","preventDefault","amount","value","centsPerSecond","save","amountPerMonth","calcAnimationDuration","toFixed","animationDuration","push","calcEuroPerSecond","centPerSecond","round","concat","Math","item","reduce","acc","parseInt","parseFloat","renderItem","suppressDelete","chartInner","chartDelete","chart","classList","add","createElement","chartAmount","chartText","innerHTML","appendChild","renderTotal","calcTotalItem","totalItem","items","addEventListener","remove","dashboardAddClose","init"],"mappings":"aAAA,IAAMA,aAAeC,SAASC,cAAc,iBAAiB,EACvDC,iBAAmBF,SAASC,cAAc,qBAAqB,EAD/DF,eAAeC,SAASC,cAAc,mBAAkB,EACxDC,KAAAA,SAAgBD,cAAYA,OAAAA,EAC5BE,iBAAiBH,SAASC,cAAc,uBAAoB,EAC5DG,kBAAgBH,SAAcA,cAAQ,6BAAA,EACtCI,WAAAA,2BAEAC,YAAa,WAEbC,OAAAA,OAAWC,aAIbC,KAAAC,MAAAC,OAAAH,aAAAI,QAAAN,UAAA,GAAA,IAAA,GAHKK,QAAOH,MAAAA,yBAAc,EACdK,GAIhB,EAEMC,YAAc,SAAAC,GAChB,IAKMC,EALDL,OAAOH,cAKNQ,EADWC,EAAAA,cACMC,QAAQF,QAEzBG,EADUZ,YAAa,EACFa,OAAO,SAAAC,GAAA,OAAAA,EAAKL,UAAAA,CAAA,CAAA,EAAAL,OAAIU,aAAaC,QAAKN,WAAOP,KAAAc,UAAAJ,CAAA,CAAA,EAACK,cAAA,EACrEb,YAAOH,GAPHiB,QAAQZ,MAAM,yBAA0B,CAUhD,EAACa,YAAA,SAAAX,GAIKY,IAQIC,EAQLC,EAlBCH,EAAAA,eAAc,EACdI,EAAAA,gBAAgB,EAChBH,OAAAA,cAKQI,GADV3B,EAAAW,EAAAE,eACeA,cAAa,SAAA,EAAAe,MACtBD,EAAc9B,EAAAA,cAAc,UAAW+B,EAAKA,MAC5ChB,EAAef,SAAa8B,EAAC,EAAA,EAC7BH,EAAwBG,sBAAWH,CAAA,EAEnCK,EAAAA,CACAC,QAAOlB,EACTA,eAAgBY,EAChBO,gBAJyD,IAAnCC,kBAAAA,CAAsBR,GAIhBS,QAAA,CAAA,EAC5BJ,kBAAAA,CACAK,GACHT,EAAAtB,YAAA,GACKsB,KAAUtB,CAAAA,EAChBsB,OAAQU,aAAUjB,QAAAhB,WAAAG,KAAAc,UAAAM,CAAA,CAAA,EAClBlB,cAAOH,EACPgB,YAAc,GAnBTb,QAAOH,MAAAA,yBAAc,CAqB9B,EAEMgC,kBAAoB,SAAAZ,GACtB,OAAOA,EAAiB,GAAK,GAAK,GAAK,EAC3C,EAGUa,sBAAgBD,SAAAA,GACtBC,EAAgD,IAAjCC,kBAAWD,CAAsB,EACnD,MAAA,GAAAE,OAAAC,KAAAF,MAAA,EAAAD,EAAA,GAAA,EAAA,IAAA,CAED,EAEQI,cAAaC,WACbC,IACId,EADAE,YAAkBa,EAClBf,OAAkBgB,SAAAA,EAAAA,GAGtBd,OAFAY,EAAOA,gBAAGC,SAAAH,EAAAV,eAAA,EAAA,EACXY,EAAAd,gBAAAgB,WAAAJ,EAAAZ,cAAA,EACCE,CACAF,EAAAA,CACAjB,eAAS,EACXiB,eAAA,EAEGA,QAAAA,OACLY,CAAAA,EAOA,OAJHA,EAAAZ,eAAAY,EAAAZ,eAAAI,QAAA,CAAA,EAEKa,EAAAA,kBAAAA,sBAAoBC,EAAAA,cAAmB,EAEnCC,CAJV,EAOUC,WAAW,SAAGrD,EAAAA,GAEpBsD,IAAMC,EAAUC,SAAIC,cAAmB,KAAA,EACvCL,EAAqBI,SAAIC,cAAA,KAAwB,EACjDL,EAAiBd,SAAAA,cAAyBA,KAAAA,EAC1CoB,EAAsBF,SAAIC,cAAA,KAAA,EAC1BC,EAAqB1D,SAAA2C,cAAWR,QAAc,EA2B9C,OAzBAwB,EAAAA,UAAUC,IAAYf,kBAAY,EAClCS,EAAMO,UAAYT,IAAAA,wBAAW,EAC7BE,EAAMO,MAAYF,kBAAUd,EAAAP,kBAC5BgB,EAAMO,UAAYH,IAAAA,yBAAY,EAE9BA,EAAIP,UAAgB,GAAAR,OAAAE,EAAAV,eAAA,YAAA,EAAAQ,OAAAE,EAAAZ,eAAA,OAAA,EAChB0B,EAAOL,UAAKE,IAAA,uBAAA,EAChBG,EAAAC,UAAAf,EAAA7B,QAEAqC,EAAAA,YAAYE,CAAc,EAC1BF,EAAAA,YAAoBrC,CAAO,EAC3BqC,EAAAA,YAAYE,CAAc,EAE1BF,IAKES,EAAWP,UAAGC,IAAdM,sBAAoB,EACtB3D,EAAce,QAAC0C,QAAcf,EAAA7B,QAC7BqC,EAAeE,UAAGQ,IAAAA,gBAAe,EAEjCV,EAAclB,UAAAA,QACVkB,EAAcH,iBAAWc,QAAelD,WAAC,EACzCX,EAAAA,YAAe0D,CAAYP,GAC/BA,CACJ,EAGUW,YAAQ1D,WACdJ,eAASyD,UAAA,GACT1D,IAAAA,EAAiB0D,cAAc,EAEH,IAAxBN,EAAQJ,iBACRhD,EAAiB2D,WAAYP,EAAM,CAAA,CAAA,EACrCnD,eAAA0D,YAAAP,CAAA,EAGN,EAEQ9B,cAAe,WACfsC,IACJR,EADIQ,EAAavD,YAAA,EAEpBL,iBAAA0D,UAAA,GAEGK,EAACC,QAAAA,SAAAA,GACLnE,EAAamE,WAAAA,CAAiB,EAC1B7D,iBAAiBkD,YAAiBD,CAAA,CAClCvD,CAAAA,CACJ,EAEIM,KAAAA,WAC6B,EAA7BN,YAAawD,EAAAA,SACf/B,cAAA,EACIsC,YAAA,EAXN,EAEA1D,KAAK8D,iBAAiB,SAAUxC,WAAW,EAC3C3B,aAAamE,iBAAiB,QAAS,WACnC7D,iBAAiBkD,UAAUY,OAAO,8BAA8B,EAChEpE,aAAawD,UAAUC,IAAI,wBAAwB,CACvD,CAAC,EACDY,kBAAkBF,iBAAiB,QAAS,WACxC7D,iBAAiBkD,UAAUC,IAAI,8BAA8B,EAC7DzD,aAAawD,UAAUY,OAAO,wBAAwB,CAC1D,CAAC,EACDE,KAAK","file":"centvisualizer.js","sourcesContent":["const dashboardAdd = document.querySelector(\".dashboard__add\");\r\nconst dashboardEntries = document.querySelector(\".dashboard__entries\");\r\nconst dashboardTotal = document.querySelector(\".dashboard__total\");\r\nconst form = document.querySelector(\".form\");\r\nconst dashboardAddForm = document.querySelector(\".dashboard__add-entry\");\r\nconst dashboardAddClose = document.querySelector(\".dashboard__add-entry-close\");\r\nconst storageKey = \"chr1s.d3v:centVisualizer\";\r\n\r\nconst readEntries = () => {\r\n    if (!window.localStorage) {\r\n        console.error(\"localStorage not found.\");\r\n        return [];\r\n    }\r\n    return JSON.parse(window.localStorage.getItem(storageKey) || \"[]\");\r\n};\r\n\r\nconst deleteEntry = (e) => {\r\n    if (!window.localStorage) {\r\n        console.error(\"localStorage not found.\");\r\n        return;\r\n    }\r\n    const button = e.currentTarget;\r\n    const expense = button.dataset.expense;\r\n    const entries = readEntries();\r\n    const newEntries = entries.filter(entry => entry.expense !== expense);\r\n    window.localStorage.setItem(storageKey, JSON.stringify(newEntries));\r\n    renderEntries();\r\n    renderTotal();\r\n};\r\n\r\nconst createEntry = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!window.localStorage) {\r\n        console.error(\"localStorage not found.\");\r\n        return;\r\n    }\r\n    const form = e.currentTarget;\r\n    const amount = form.querySelector(\"#amount\").value;\r\n    const expense = form.querySelector(\"#expense\").value;\r\n    const euroPerMonth = parseInt(amount, 10);\r\n    const animationDuration = calcAnimationDuration(euroPerMonth);\r\n    const centsPerSecond = calcEuroPerSecond(euroPerMonth) * 100;\r\n    const save = {\r\n        expense: expense,\r\n        amountPerMonth: euroPerMonth,\r\n        centsPerSecond: centsPerSecond.toFixed(4),\r\n        animationDuration\r\n    };\r\n    const entries = readEntries();\r\n    entries.push(save);\r\n    window.localStorage.setItem(storageKey, JSON.stringify(entries));\r\n    renderEntries();\r\n    renderTotal();\r\n};\r\n\r\nconst calcEuroPerSecond = (euroPerMonth) => {\r\n    return euroPerMonth / 30 / 24 / 60 / 60;\r\n};\r\n\r\nconst calcAnimationDuration = (amountPerMonth) => {\r\n    const centPerSecond = calcEuroPerSecond(amountPerMonth) * 100;\r\n    return `${Math.round((1 / centPerSecond) * 1000) }ms`;\r\n};\r\n\r\nconst calcTotalItem = () => {\r\n    const items = readEntries();\r\n    let item = items.reduce((acc, item) => {\r\n        acc.amountPerMonth += parseInt(item.amountPerMonth, 10);\r\n        acc.centsPerSecond += parseFloat(item.centsPerSecond);\r\n        return acc;\r\n    }, {\r\n        amountPerMonth: 0,\r\n        centsPerSecond: 0,\r\n        expense: \"Total\"\r\n    });\r\n\r\n    item.centsPerSecond = item.centsPerSecond.toFixed(4);\r\n    item.animationDuration = calcAnimationDuration(item.amountPerMonth);\r\n\r\n    return item;\r\n};\r\n\r\nconst renderItem = (item, suppressDelete) => {\r\n    const chart = document.createElement(\"div\");\r\n    const chartInner = document.createElement(\"div\");\r\n    const chartText = document.createElement(\"div\");\r\n    const chartAmount = document.createElement(\"div\");\r\n    const chartDelete = document.createElement(\"button\");\r\n\r\n    chart.classList.add(\"dashboard__entry\");\r\n    chartInner.classList.add(\"dashboard__entry-inner\");\r\n    chartInner.style.animationDuration = item.animationDuration;\r\n    chartAmount.classList.add(\"dashboard__entry-amount\");\r\n    chartAmount.innerHTML = `${item.amountPerMonth}€ / mo. = ${item.centsPerSecond}¢ / s`;\r\n    chartText.classList.add(\"dashboard__entry-text\");\r\n    chartText.innerHTML = item.expense;\r\n    chart.appendChild(chartInner);\r\n    chart.appendChild(chartText);\r\n    chart.appendChild(chartAmount);\r\n\r\n    if (suppressDelete) {\r\n        return chart;\r\n    }\r\n\r\n    chartDelete.classList.add(\"dashboard__entry-del\");\r\n    chartDelete.dataset.expense = item.expense;\r\n    chartDelete.classList.add(\"material-icons\");\r\n    chartDelete.innerHTML = \"close\";\r\n    chartDelete.addEventListener(\"click\", deleteEntry);\r\n    chart.appendChild(chartDelete);\r\n    return chart;\r\n};\r\n\r\nconst renderTotal = () => {\r\n    dashboardTotal.innerHTML = \"\";\r\n    const totalItem = calcTotalItem();\r\n\r\n    if (totalItem.amountPerMonth !== 0) {\r\n        const chart = renderItem(totalItem, true)\r\n        dashboardTotal.appendChild(chart);\r\n    }\r\n}\r\n\r\nconst renderEntries = () => {\r\n    const items = readEntries();\r\n    let chart;\r\n    dashboardEntries.innerHTML = \"\";\r\n    items.forEach((item) => {\r\n        chart = renderItem(item)\r\n        dashboardEntries.appendChild(chart);\r\n    });\r\n};\r\n\r\nconst init = function () {\r\n    if (readEntries().length > 0) {\r\n        renderEntries();\r\n        renderTotal();\r\n    }\r\n}\r\n\r\nform.addEventListener(\"submit\", createEntry)\r\ndashboardAdd.addEventListener(\"click\", () => {\r\n    dashboardAddForm.classList.remove(\"dashboard__add-entry--hidden\");\r\n    dashboardAdd.classList.add(\"dashboard__add--hidden\");\r\n});\r\ndashboardAddClose.addEventListener(\"click\", () => {\r\n    dashboardAddForm.classList.add(\"dashboard__add-entry--hidden\");\r\n    dashboardAdd.classList.remove(\"dashboard__add--hidden\");\r\n})\r\ninit();\r\n"]}